%Длина списка
%(список, длина)
my_length([], 0).
my_length([_|L], N):-
        my_length(L, N1), N is N1+1.

%Отношение принадлежности
%(элемент, список)
my_member(E, [E|_]).
my_member(E, [_|R]):-
        my_member(E, R).

%Конкатенация списков
%(список 1, список 2, список 1 + список 2)
my_append([], L, L).
my_append([X|T], L2, [X|R]):-
        my_append(T, L2, R).

%Удаление элемента из списка
%(элемент, список, список без элемента)
my_remove(X, [X|T], T).
my_remove(X, [Y|T], [Y|Z]):-
        my_remove(X, T, Z).

%Проверка является ли первый список подсписком второго
%(подсписок, список)
my_sublist(S, L):-
        my_append(_, L1, L),
        my_append(S, _, L1).

%Перестановки
%(список, перестановка)
my_permute([],[]).
my_permute(L, [X|T]):-
        my_remove(X, L, Y),
        my_permute(Y, T).

%Вставка элемента в заданное место
%(элемент, список, позиция, список с элементом)

%без использования стандартных предикатов
ins_in_pos(X, [H|L], P, [H|R]):-
        P > 1,
        !,
        P1 is P - 1,
        ins_in_pos(X, L, P1, R).
ins_in_pos(X, L, 1, [X|L]).

%с использованием стандартных предикатов
ins_in(X, L, P, R):-
        prefix(PR, P),
        length(PR, L),
        append(PR, PO, P),
        append(PR, [X|PO], R).

%Проверка на геометрическую прогрессию
%(список)

%без использования стандартных предикатов
geom_seq([X,Y,Z|T]) :-
        !,
        (Y * Y) =:= (X * Z),
        geom_seq([Y,Z|T]).
geom_seq(_).

%с использованием стандартных предикатов
geom([X,Y,Z|T]) :-
        !,
        (Y * Y) =:= (X * Z),
        my_remove(X, [X,Y,Z|T], R),
        geom(R).
geom(_).

% Пример совместного использования предикатов
% Вставка нового элемента в список на позицию и проверка списка на геометрическую прогрессию
% (элемент, позиция, список)
new_arithm(X, N, L1):-
        ins_in_pos(X, L1, N, L2),
        geom_seq(L2).